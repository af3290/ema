namespace MarketModels.Tests

module TimeSeriesTests =
    open Microsoft.FSharp.Core
    open NUnit.Framework
    open NUnit.Framework.Interfaces
    open MarketModels.MathFunctions
    open MarketModels.TimeSeries
    open MarketModels.Tests
    open MarketModels.Optimization
    open MarketModels.Operations

    let areWithinPrc (v1 : float) (v2 : float) (prc : float) : bool =
        (1.0 - prc) < (v1 / v2) && (v1 / v2) < (1.0 + prc)

    [<TestFixture>]
    type TimeSeriesUnitTests() = 
        member this.Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|]
        member this.E = [|-1.82685867031308; -1.35165909803276; -2.20877776449571; -2.07240649521385; -2.01592709857203; 0.0833848214989643; -0.489593359565870; -0.963869603835474; 0.00276809623009111; -0.964696780197351; 0.437136844814636; 1.03902994862363; 0.686146849363895; 1.32786083200205; -0.516666585934343; 2.30592076109070; -0.898445763984057; -0.848599934599480; 2.00223518700306; -1.89899474448736; -1.17669832447034; -0.117662293973938; -1.12171819772432; 2.59119400151084; -1.77533857963747; -0.380397714925289; 0.257051490595630; -0.624643860520891; -2.90615463080411; -1.16417582599196; 0.383670088300465; 9.73914843758585; 2.93413000228282; -3.24750631538322; -1.34024693164813; -1.44309376614550; 2.22007903835298; -2.16101954398654; 0.949911089585048; -3.63762708422115; -1.49666531471103; -0.338456568612867; 5.83836897629736; -4.74256684244782; 0.237618782874292; -1.39871176072982; 0.748144720863540; 1.61661301928910; 1.55985385856934; -0.522765694318285; 0.250732169161046; 0.692606612443869; -0.330649110899923; 0.881946886203499; 1.18279791264344; -0.505794060949101; -1.61330032387391; 0.333045581058764; 0.134591619160237; 1.17157468228490; 1.06796392803980; 0.796813500718651; 1.15458776279453; 1.52456897034188; 0.915401179749889; 1.08840489774099; 1.20967830778914; 1.00836540486750; 0.203362801824010; -0.947471561398104|]
        
        member this.Yf = [|35.6425064759818; 35.3108479456079; 35.6476707243436; 36.1718655280130; 36.6263362411149; 36.9062576827983; 36.9570224340249; 36.8986962009210; 36.8347276188186; 36.7517655165464; 36.6168518884699; 36.5316552209422; 36.5010751280919; 36.5649517943157; 36.6945568097963; 36.8300612463439; 36.9491457689013; 37.0460969699781; 37.0832194404010; 37.0727918887809; 37.0495462957119; 37.0208231977913; 36.9552615107027; 36.8008358659226 |]
        member this.YMSE = [| 4.11884873345281; 10.0687101038763; 13.7104633912843; 14.8418151291542; 14.9417515367846; 14.9662084795079; 15.0868711765208; 15.2015472847874; 15.2553019869624; 15.2669451173838; 15.2671084247505; 15.2686333498704; 15.2714825655665; 15.2734595974040; 15.2741631851619; 15.2742526748668; 15.2742566964012; 15.2743082535774; 15.2743662995209; 15.2743969504874; 15.2744048598221; 15.2744052061435; 15.2744057113898; 15.2744070363181|]

        member this.ARMAModel1 = {
            AR = {
                    Coefficients = [|1.20189; -0.504243; 0.0289846|];
                    Lags = [|1; 2; 24|]
                };
            MA = {
                    Coefficients = [|0.0201776|];
                    Lags = [|24|]
                };
            Const = 10.0;
            Var = 4.11885
        }

        [<Test>]
        member this.FilterTest1() = 
            //artificial data... etc...
            let Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|];
            
            let resf = Filter1D [|1.0; -1.2106; 0.5433; 0.1233|] [| 1.0; 0.5 |] Y

            Assert.AreEqual(resf.[0], Y.[0])

        [<Test>]
        member this.FilterTest2() = 
            //data taken from matlab... why are the differences so big?
            let Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|];
            let result = [|31.9701258398659; -7.64557897847645; 9.81076487092602; 9.92203181513606; 9.94801796778196; 12.0292201882761; 11.4335667165928; 11.0289581899588; 12.0738428728465; 11.1394134895206; 12.5892263357701; 13.1821992537807; 12.8434421647579; 13.5328461943673; 11.7187361018659; 14.5958319355031; 11.3449957363468; 11.4525330009900; 14.2720266703725; 10.2794148561517; 11.0502306680233; 12.0453233914741; 10.9428692784185; 14.6021216868775; 10.1001970539149; 11.6089775491069; 12.1930753476076; 11.2709651397907; 8.98951635540043; 10.8400910364750; 12.3346442585213; 21.6416739822037; 14.8396719874796; 9.03541268360689; 11.2869426721165; 11.1338972292516; 14.6223066057728; 10.0688014191681; 13.1325078896097; 8.56933784878235; 10.6767688852915; 11.6978366431142; 17.9032643283219; 7.15397249790237; 12.4141324494238; 10.7321981103584; 12.8217626468801; 13.7788893004932; 13.6136543030269; 11.6096323899938; 12.4960034961250; 12.9009969779339; 11.7192579532827; 12.9209754733172; 13.2451327083767; 12.0746415618670; 11.0584875378073; 12.7728185500383; 12.3693955710181; 13.2339475704272; 13.2081344105132; 12.8478779103052; 13.3563778315130; 13.5898953276529; 13.0019279020442; 13.2393475757505; 13.7017165882215; 13.2203486449683; 12.4923671612387; 11.2550239853002; 12.8034910592081; 11.0077582055074; 11.0645417136472; 12.1359540791084; 11.1743704256531; 12.8505039254302; 12.6674295821861; 12.4396577143065; 11.0468854838989; 12.5005430290343; 11.0487165759585; 11.7229515175376; 13.2661269759000; 11.3711519650126; 17.2511214328127; 8.41929491904165; 18.6302529763273; 11.3532166773698; 9.11643477760740; 11.8724686395130; 10.9981072845866; 10.7832314762326; 12.6870611404071; 13.0149782246981 |];
            
            let resf = Filter1D [|1.0; -1.2106; 0.5433|] [| 1.0 |] Y

            Assert.AreEqual(resf.[0], Y.[0], 0.001)

            let diffs = Array.init resf.Length (fun i -> resf.[i] - result.[i])
            //it's very small...-0.1845246733039172, so the filter can't be wrong.. it does its job well... yes...
            let diffsSum = diffs |> Array.sum
            
            for i in 1..10 do
                Assert.AreEqual(resf.[i], result.[i], 0.01)

            Assert.AreEqual(resf.Length, Y.Length)
            Assert.AreEqual(resf.Length, result.Length)

        [<Test>]
        member this.TestFloatingPointErrorsVsMatlab() = 
            let Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|];
            
            let a1 = SeriesAutocorrelationFFT Y.[0..20]
            let l1 = L2Norm Y.[0..20]
            let a2 = SeriesAutocorrelationFFT Y.[0..45]
            let l2 = L2Norm Y.[0..45]
            let a3 = SeriesAutocorrelationFFT Y
            let l3 = L2Norm Y

            Assert.AreEqual(1, 1)

        [<Test>]
        member this.ARMATestLongerLags0() = 
            //IN TODO:...
            let yyy = TestData.HourlySystemPriceTestData |> Seq.take (24*7*4*12) |> Seq.toArray

            let res = ARMASimple2 yyy [|1; 3; 6|] [|1|]

            //vs values from matlab outputs
            //quite large errors, but still ok
            Assert.AreEqual(res.AR.Coefficients.[0], 1.2369, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[1], -0.4939, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[2], -0.1464, 0.05)
            Assert.AreEqual(res.MA.Coefficients.[0], 0.1282, 0.05)

        [<Test>]
        member this.ARMATest01() = 
            let Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|];
            
            let res = ARMASimple Y 2 1

            Assert.AreEqual(4, 2+2)

        [<Test>]
        member this.ARMAInferResidualsOfSpecifiedModel() = 
            //PASSES!!!

            //take the in-sample part
            let yy = Array.sub this.Y 0 70
             
            let res = Infer this.ARMAModel1 yy

            this.E |> Array.iteri (fun i x -> Assert.AreEqual(res.[i], x, 0.01))

        [<Test>]
        member this.ARMAForecastSpecifiedModel() = 
            let yy = Array.sub this.Y 0 70
                        
            let forecasted = Forecast yy this.E this.ARMAModel1 24 0.95

            //works just fine...
            this.Yf |> Array.iteri (fun i x -> Assert.IsTrue(areWithinPrc x  forecasted.Forecast.[i] 0.02))
             
            let rlzd = Array.sub this.Y 69 24
            let fc = forecasted.Forecast
            let residuals =  fc -- rlzd
            let sqErrs = residuals ^^ 2.0
            ()
            //not working yet
            //this.YMSE |> Array.iteri (fun i x -> Assert.AreEqual(sqErrs.[i], x, 0.01))            

        [<Test>]
        member this.ARMAEstimateAndForecastTest01() = 
            let Y = [|31.9701258398659; 31.0566057478547; 30.0367977830021; 29.4098534693792; 29.2309678510293; 31.4362523770192; 33.6074513348075; 34.6330454500176; 35.7398136451162; 35.5879742939911; 36.2526361638673; 37.7327296685769; 38.8246049520236; 40.0316277476803; 39.0854608193705; 40.1613426766006; 38.7270195691525; 36.5136465205741; 37.4329976892467; 35.7559158058523; 33.9969915079280; 33.7739829827230; 33.3572337240452; 36.6331473600124; 36.3233883115212; 35.6772867067768; 35.6475318772809; 35.0404464399008; 32.0402427943400; 30.5886972684373; 31.9561430865081; 43.7072318925434; 50.3878139394647; 46.2861926242720; 39.9426607038115; 34.3388303357668; 34.4900109240278; 33.1642396110154; 34.5408618964680; 32.3645230577274; 31.0893785217079; 31.7492563016660; 39.4463363862639; 37.6563949943225; 36.5676593410869; 34.5402560618265; 34.7670407731469; 37.1002522025905; 39.6363224428661; 39.4347003645476; 38.6990748412613; 38.3230865606927; 37.0858721550586; 36.9941358041080; 37.8794528392554; 37.8305459078931; 36.2741688038464; 36.1309635666233; 36.3998035936597; 37.6676136189519; 39.0305092342493; 39.6313010971483; 40.1266041561924; 40.6332952537853; 40.3896025209229; 40.0567147222137; 40.2485037288420; 40.1801777651232; 39.2652783232952; 36.9575056148528; 36.2093349799322; 34.7617644671117; 33.4726597335516; 33.7700219457441; 33.8688239473140; 35.5029992700072; 37.2445322370402; 38.2371204761820; 37.0997253405636; 36.6371814499304; 35.2433904264698; 34.4816521022939; 35.8599732583205; 36.0474310683675; 41.4054513239057; 38.9580506392728; 43.2950873456220; 42.5980940611288; 37.1611165733388; 33.7139860352261; 31.6206828671640; 30.7446328606229; 32.7252901626463; 35.9269209515003|];
            
            let res = ARMASimple Y 2 1

            Assert.AreEqual(4, 2+2)

        [<Test>]
        member this.ARMATestLongerLags() = 
            //WORKS... AWESOME..
            let yyy = TestData.HourlySystemPriceTestData |> Seq.take (24*7*4*12) |> Seq.toArray

            let res = ARMASimple2 yyy [|1; 2; 24|] [|24|]
            
            //vs values from matlab outputs
            //quite large errors, but still ok
            Assert.AreEqual(res.AR.Coefficients.[0], 1.2369, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[1], -0.4939, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[2], 0.1464, 0.05)
            Assert.AreEqual(res.MA.Coefficients.[0], 0.1282, 0.05)
             
        [<Test>]
        member this.ARMATestLongerLags2() = 
            
            let yyy = TestData.HourlySystemPriceTestData |> Seq.take (24*7*4*12) |> Seq.toArray

            let res = ARMASimple2 yyy [|1; 2; 24|] [|1; 24|]

            //vs values from matlab outputs
            //quite large errors, but still ok
            Assert.AreEqual(res.AR.Coefficients.[0], 1.2369, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[1], -0.4939, 0.05)
            Assert.AreEqual(res.AR.Coefficients.[2], 0.1464, 0.05)
            Assert.AreEqual(res.MA.Coefficients.[0], 0.1282, 0.05)

        [<Test>]
        member this.ARMATest1() =             
            //a year worth of data... should suffice...
            let yyy = TestData.HourlySystemPriceTestData |> Seq.take (24*7*4*12) |> Seq.toArray
            
            //problem... why 4sec on filtering 8k data points...? TODO: refactor...
            let res = ARMASimple yyy 2 1
            
            //versus matlab 1.20744102237650 -0.258813763653975
            Assert.AreEqual(res.AR.Coefficients.[0], 1.2055, 0.01)
            Assert.AreEqual(res.AR.Coefficients.[0], 0.2574, 0.01)

            //versus matlab 1.20744102237650 -0.258813763653975
            Assert.AreEqual(res.MA.Coefficients.[0], 1.2055, 0.01)

            //vs matlab 2.1187
            Assert.AreEqual(res.Const, 2.1396, 0.1)
            
            //vs matlab 7.1188
            Assert.AreEqual(res.Var, 7.1, 0.1)

        [<Test>]
        member this.ARMATest2() = 
            //deterministic function with noise...
            let Y = [||];
            
            let res = ARMASimple Y 2 1

            Assert.AreEqual(4, 2+2)

        [<Test>]
        member this.ARMATest3() = 
            //simple trend... etc...
            let Y = [|1.0; 2.0; 3.0; 4.0;|];
            
            let res = ARMASimple Y 2 1

            Assert.AreEqual(4, 2+2)

        [<Test>]
        member this.OptimTest1() = 
            //WORKS!
            //lsqlin data from AR [1 3 6] demo
            let C = 
                array2D [|[|0.0992778571856557; 0.174645080517514; 0.0992778571856557; 0.0358987395125802; -0.0243687278044009; -0.0530272016540059|];
                    [|0.0358987395125802; 0.0992778571856557; 0.174645080517514; 0.0992778571856557; 0.0358987395125802; -0.0243687278044009|];
                    [|-0.0243687278044009; 0.0358987395125802; 0.0992778571856557; 0.174645080517514; 0.0992778571856557; 0.0358987395125802|];
                    [|-0.0530272016540059; -0.0243687278044009; 0.0358987395125802; 0.0992778571856557; 0.174645080517514; 0.0992778571856557|];
                    [|-0.0569224049535282; -0.0530272016540059; -0.0243687278044009; 0.0358987395125802; 0.0992778571856557; 0.174645080517514|];
                    [|-0.0595891288544603; -0.0569224049535282; -0.0530272016540059; -0.0243687278044009; 0.0358987395125802; 0.0992778571856557|]|];
            
            let d = [|0.0358987395125802;-0.0243687278044009;-0.0530272016540059;-0.0569224049535282;-0.0595891288544603;-0.0366910298907116|];

            let Aeq = array2D [|[|0.0;1.0;0.0;0.0;0.0;0.0|];
                            [|0.0;0.0;0.0;1.0;0.0;0.0|];
                            [|0.0;0.0;0.0;0.0;1.0;0.0|]|];

            let beq = [|0.0;0.0;0.0|]

            let res = ConstrainedLinearLeastSquares C d Aeq beq

            let expRes = [|0.551247137358563;0.0;-0.290909795558365;0.0;0.0;-0.197968260699265|]
            
            expRes |> Array.iteri (fun i x -> Assert.AreEqual(res.[i], x, 0.001))

        [<Test>]
        member this.OptimTest2() = 
            //Very simple example
            //WORKS!!!! AWESOME...
            let C = 
                array2D [|[|1.0; 2.0|];
                    [|3.0; 4.0|];|];
            
            let d = [|5.0; 6.0|];

            let Aeq = array2D [|[|0.0; 0.0|]|];

            let beq = [|0.0|]

            let res = ConstrainedLinearLeastSquares C d Aeq beq

            let expRes = [|-4.0; 4.5|]
            
            expRes |> Array.iteri (fun i x -> Assert.AreEqual(res.[i], x, 0.001))

        [<Test>]
        member this.ARXTest1_IndicatorVariables() = 
            //PASSES JUST FINE...
            let mutable Y = [|36.8003658529801; 37.2481350437934; 37.0695811805175; 35.5552318063223; 34.5672979597624; 32.7190736181168; 33.2544445485166; 33.3006898824221; 35.4161460538419; 34.5263129034741; 37.0097088957308; 38.0973073482846; 39.6910982368470; 38.4441308258860; 37.9354376995755; 38.1737369156479; 38.7242081301591; 42.6255772754214; 46.0740938038241; 46.7120438637614; 44.6012741831342; 42.8762306160078; 40.9207184854941; 40.2060747442162; 37.5717074268833; 35.2730594252585; 30.5182818568633; 26.0436961918052; 25.1158130975261; 28.9914706235487; 38.3858899280429; 43.6309193976634; 49.4272563393286; 49.4815095387733; 49.2184670088856; 49.0073714000401; 48.6603051902827; 48.4650046682594; 48.5275763456753; 48.6274351317084; 49.3254266880093; 49.8737080433327; 50.0774032744136; 49.0748123615163; 48.0661985394098; 47.2192653941155; 44.6504075002871; 42.6808375949555; 38.8689871983970; 39.0546022793986; 38.0462621534021; 36.8963783477281; 36.9764278545489; 38.7112383906545; 40.1057491457291; 44.6121182914087; 47.3364793564179; 47.7633308358985; 47.3060353583085; 47.2682811969546; 47.1020282180649; 46.8486314846921; 46.5586911409099; 46.7154316197517; 47.0363111870351; 47.6566725604498; 47.7937418657536; 47.1592357687939; 46.5627010156993; 45.4619628243402; 44.8694624515406; 42.9554295482978; 38.7550582062158; 34.2143528896270; 25.6847959092813; 23.7273340576805; 22.9936458941935; 25.7407830751769; 36.1712232407465; 41.4028191141095; 46.6443840422138; 46.9109076924669; 46.6798924992818; 46.6385018746668; 46.4194496115039; 46.2519882646965; 46.1944730844541; 46.4718017217542; 47.0197939567263; 47.5486089530678; 47.8219938089229; 46.8488800719758; 46.2044472596812; 45.6770500437834; 44.1618581601538; 43.0233655294111; 39.3012776689631; 38.1964874011912; 37.0106561208632; 35.8043303028436; 35.9668725279019; 37.3792542848209; 41.0271328679819; 44.2660692214334; 47.7021481421194; 47.8646394712548; 47.0680917661265; 46.8143456180642; 46.6914291482561; 46.5791985196532; 46.6055485314925; 46.8373355096717; 47.0941230076948; 47.5035075081659; 47.4031420285321; 46.7809374755015; 45.9896215931985; 45.2879854063604; 44.1330822415494; 42.8864073024132; 37.8460405025795; 36.3885088158072; 34.4711791454353; 29.7177473344748; 28.6726096738324; 34.9641251686889; 38.6508584480973; 43.2087542305491; 46.1514532457689; 47.0297800093551; 46.6133237214884; 46.4581710644953; 46.0876415757684; 45.7709750494796; 45.6157667079629; 45.8363192395274; 46.4171148265846; 46.8404672952389; 46.8229965851329; 46.2530923575210; 45.1391493183694; 44.4646470736622; 43.1298623840177; 43.0263176429013; 40.5208683295932; 38.3587729952663; 36.3183503069935; 34.5064033325240; 33.8949926729602; 33.2843947390481; 34.4378886512024; 35.6738029991483; 39.0098340268039; 40.8481939505999; 42.5114609638341; 43.2927129485827; 43.5694081564326; 43.5361720430196; 43.6409101120714; 43.5172143889321; 44.1043402760397; 45.5391553262326; 46.0356090728973; 45.4500129000665; 44.7738316831634; 42.9448588690712; 42.4432854327882; 41.6438253808001; 38.7485857133966; 40.8912189736113; 38.6089105191843; 36.5781133377096; 35.8985823418124; 35.5356563626017; 36.8144990233544; 36.9129362639892; 38.4884567688026; 39.3614535768513; 40.9312809839884; 43.8273750544463; 44.8676227342729; 44.9858513152620; 42.6791089378054; 40.7716202162227; 41.1783188292920; 43.9234760331783; 46.1641856801184; 45.7897986383721; 45.2133840720723; 44.4874341861634; 42.6097130415762; 39.9327623667043; 35.3362106403106; 35.2421505496978; 29.9894096139644; 26.3148976298018; 26.2838489745345; 25.0644857288478; 37.6266183834467; 41.9733817752299; 46.9148364455695; 47.4471908720304; 46.8574643624941; 46.6696125463545; 46.4146845870213; 46.2710284192675; 46.2960916333963; 46.5562715026759; 47.2646864659490; 47.7643721607448; 48.1174490555435; 47.6266926438517; 46.6693362958682; 45.8534064705025; 45.3148227040049; 41.7007148726560; 38.5545103476917; 38.5686739101970; 37.4800182404826; 36.6547364363420; 36.5815527916386; 36.5695494463029; 39.2870042739121; 43.7075478071156; 46.1110913693146; 46.4289392880182; 45.9629608807610; 45.8281850331048; 45.7143017271326; 45.6013122711413; 45.6172730463808; 45.7799569945758; 45.9590747243787; 46.3611725042891; 46.2440588872270; 45.4776204498564; 44.6922699461597; 43.5535205537889; 43.1011142571630; 41.2268187024690; 36.6620027259962; 38.9135928857396; 36.9558313285978; 31.2664649012867; 30.8755572830020; 34.3641075447674; 39.5260426071730; 42.4343954608159; 46.2348610673179; 46.8846436299355; 46.4698656057732; 46.2377992419637; 45.9887256312211; 45.6145881735516; 45.6295034769612; 45.8306271614489; 46.1067639144036; 46.8900988639697; 46.8628451913342; 46.1159379475480; 45.4286203288837; 44.4455214622363; 43.4470230013346; 40.6409033991680; 37.5124838232083; 37.7904703590004; 35.5335602217569; 34.3753626747642; 34.1223133450401; 35.4404931346518; 38.2174228829556; 40.8842045487327; 44.5254398321673; 45.0775400339476; 44.3105220368331; 44.0370010810945; 43.8063650391326; 43.7657439034867; 43.9024386197029; 44.3221082400810; 44.9416309820315; 45.5904583404256; 45.6179439699105; 44.8265577459732; 43.7310625975028; 43.0552376006180; 41.6995682946653; 39.8419436675527; 36.5741631723132; 37.8280417154847; 35.8330859652844; 35.1989354682599; 35.1569952513931; 35.8265223988024; 39.3534466153553; 43.0741493033264; 46.1871375800669; 46.8787368511246; 46.4853336551812; 46.4022616791223; 46.1126786681173; 45.9447804451933; 45.7194750943263; 45.7528487939960; 46.1000898405448; 46.4017995497084; 46.5305350202027; 46.1933704965921; 45.2200735962604; 44.3591173045809; 42.3383282291599; 40.5938241473978; 39.3777643537260; 39.6675073335917; 38.0719246311566; 35.9690891704596; 35.0316270222956; 35.6657534995183; 37.3750645026806; 38.1731820870416; 39.2556044545409; 41.1594580335656; 44.0493610706582; 45.4180414415941; 45.6131675198931; 45.3024048620293; 44.2569885148506; 43.6010979050773; 44.6980916938785; 46.2311422906135; 46.8636825269801; 46.3924163416246; 45.6613914548560; 43.7389010809303; 43.1450474607294; 41.6634688657019; 39.6918642068735; 39.8580776553404; 39.1748892671406; 38.1970437648780; 37.4315731442878; 36.2647476276404; 36.8697321537948; 37.4566431892237; 38.5280331540441; 37.7616976204999; 38.4061524592947; 40.2725813794810; 43.0171684321001; 42.3416537831133; 40.8288654523796; 41.1610196618006; 42.3058249327434; 44.5661135774770; 46.8411982286476; 46.6581177431335; 45.6691941980040; 44.5072142114009; 44.2879889945831; 44.2095293664005; 40.9603714064316; 39.9569918300200; 39.9739838476250; 39.8341338776234; 39.8454459387669; 40.8232198305508; 43.0385921000588; 45.4474720113056; 50.5580868207531; 53.9358929981353; 50.6618530989446; 50.1542063434315; 49.0816284484609; 48.7135142101175; 48.8226336512721; 49.6775943618899; 60.4077312909598; 79.5239037982378; 61.3621221548753; 47.9815500869112; 45.6650906207230; 44.0129458532175; 43.5965227423479; 42.5357277186402; 40.7618146094456; 38.6996211095819; 38.3827987825505; 37.7857498337367; 37.2772646028097; 37.7425735136498; 40.1322899358696; 42.5455864749412; 45.9566510835041; 47.0699302972521; 46.1758644904013; 45.8065839213246; 45.1564159559435; 43.7568612498278; 43.3430563742292; 43.6145940597547; 44.8369305335667; 45.6363505102354; 45.6644806558024; 43.5933177269972; 42.1633745090888; 41.2470398530687; 40.9254340669971; 39.6531201959143; 37.7697022911950; 36.9495364650116; 35.9552333404049; 34.6616330032169; 33.8026964539731; 34.7017683042236; 37.7261072498258; 41.0405702058839; 42.5618934502257; 43.2522837802052; 42.7202428975924; 42.7276319834203; 42.6458206331017; 42.2791723486088; 42.4889635211579; 42.7444661114071; 43.6457835712600; 45.0550403355239; 45.0436629500673; 42.9533355863522; 41.9281098082376; 41.3513139857657; 40.8716047186743; 40.0641034849875; 37.1315040476258; 36.9327107923719; 35.5064606977454; 34.6051025500848; 34.5952552213855; 35.2567218782827; 37.4164925335229; 39.7219057362152; 41.6876814664410; 42.2940480420382; 41.7681508779511; 41.6439788640629; 41.5215377967646; 41.5978279035379; 41.5349636853022; 41.6896243280699; 41.6940493394551; 42.2990340898789; 42.0475111326253; 41.1887560075958; 40.7859715907647; 40.2020440609445; 39.6171062291962; 38.7949432247241; 37.0104627272987; 35.9136346815410; 34.4304156503568; 33.1283800486308; 32.1133746621390; 32.9867501841582; 37.1186833265591; 38.8746623456191; 40.3189663142722; 41.0323346732774; 40.7892080342829; 40.7859803154328; 40.5462574209781; 39.9948340789167; 39.5797036931938; 39.5549744413471; 40.2299752109129; 40.5697065928314; 40.5988331233555; 40.1545492705618; 39.1849336127831; 38.5451372026596; 38.1810924577364; 37.4486055379096; 34.6001473272892; 34.6223914777551; 33.6209287002164; 32.5471137913817; 32.6138558137302; 32.9176232160017; 33.8290879158206; 32.7680893955443; 34.2065885064039; 37.0824308304966; 37.9950838744523; 38.9830858910820; 39.0699548115402; 39.0473281897001; 38.4342321394921; 38.0966105058089; 39.2123898144414; 40.9813986272728; 41.4038370769361; 40.7362154906059; 39.6844917673063; 38.2349031626708; 37.0832172750551; 36.6782245448082; 33.6205205702198; 37.9480289346790; 35.9368898850170; 34.8434096394292; 34.8707097668380; 35.1155387640000; 35.3087503861256; 33.7174869439710; 35.9732498073394; 36.9649769812824; 38.2481643011528; 40.5569910308357; 40.9896539212127; 40.8053100600983; 40.5944412885775; 39.4710941031715; 39.8228876835448; 41.7851431701675; 42.3783287651239; 41.4947096982941; 40.7817914002225; 40.1780596143896; 40.6177606417505; 40.9032082007043; 39.3720666011504; 38.0909476442280; 37.2730399332590; 35.9757509238997; 35.2505266197170; 36.1526448848794; 36.8943703266388; 36.4928685989680; 36.8661818387903; 37.9923990779675; 39.0324406204395; 40.8150815971227; 41.7431627899283; 41.2581800103932; 39.7754124337692; 39.3883062023950; 40.0212781320952; 41.8650028069923; 42.9297177262653; 43.4252117882903; 42.9865976131274; 42.4160908906104; 42.2181879576996; 42.4858392276554; 40.8382852943769; 38.7328327857301; 38.6687756541796; 36.9021080510026; 36.3545010818917; 36.3281169492914; 37.6424890841783; 39.4202214218544; 40.1764749931547; 41.0983729864841; 41.3558409837273; 42.5151533084041; 42.5631307207921; 42.3635755618624; 41.2800759465034; 41.0596212953716; 42.4279875359379; 43.3615443163095; 44.3985334380776; 44.1681379653523; 43.7533345313970; 42.5266447247063; 42.5098290210233; 42.4436602146800; 41.0386495174445; 41.4573126637145; 40.6483840448626; 39.0540136370099; 37.7303629547774; 37.5206743430834; 40.3190584608599; 41.4011341536303; 43.6881445291202; 44.7089982433741; 45.1621703930939; 45.0758634279097; 44.9999201561104; 44.9932906829693; 44.9564548842549; 45.2148924453323; 45.6557641979858; 45.8625097676351; 45.8286549965168; 45.5578012883983; 44.9748792621056; 44.1536569328551; 43.3440881519039; 42.2309257988137; 41.1045636414965; 40.0148041318900; 38.8332077026530; 37.6598958192899; 37.2829405535475; 37.8086367264947; 39.7453681550166; 41.3084426254235; 42.8281435869260; 43.7532019909107; 44.8902264794508; 45.2509515876454; 45.1917386625923; 45.0242472885719; 44.8683080613578; 45.0192578593665; 45.3641038057396; 45.7225878719756; 45.7299657254158; 45.4013663281930; 44.7419292991141; 44.1211667544477; 43.2529627857811; 42.4071123611732; 40.4113057781711; 39.9525058740352; 38.7423136587738; 37.7477095135920; 37.7241316317570; 38.5782916809091; 40.4741355200880; 40.7064937341796; 42.0187265377244; 43.7836607067582; 44.0932215232923; 44.3186696821936; 44.3331907543089; 43.7755196007351; 42.9301430985730; 42.6387418770400; 43.0506285977932; 43.6429535879868; 43.9204179728979; 43.2967199308868; 41.8839899263653; 40.8073378356991; 40.2293402354404; 39.7092172189017; 37.2565574270834; 38.4463400846565; 36.9395379815607; 36.1159942156207; 35.6011962693909; 35.6565352991774; 35.6135031820392; 36.5274471211849; 37.3989881474604; 38.8589517347944; 39.5290220774066; 40.3960488076242; 40.6098142251900; 40.4755903191452; 40.0971196441787; 39.7047123360237; 40.2934891602754; 41.3856237226253; 43.2786436078163; 42.6211710630606; 40.7025535617522; 39.9158408799130; 39.5449047591079; 38.4410551972777|]
            Y <- Y.[0..503]

            let lmat = LaggedMatrix Y [|1; 2; 24|]

            let X = Array2D.zeroCreate Y.Length 3
            let ones = (Array.zeroCreate 24) .+. 1.0 
            let N = Y.Length / 168
            for j in 0..N-1 do
                X.[j*168 + 0*24 .. j*168 + 0*24 + 23, 0] <- ones;
                X.[j*168 + 5*24 .. j*168 + 5*24 + 23, 1] <- ones;
                X.[j*168 + 6*24 .. j*168 + 6*24 + 23, 2] <- ones;
            
                       
            let ar = {
                Coefficients = [|0.0; 0.0; 0.0|];
                Lags = [|1; 2; 24|]
            }
            
            let arx = ARX Y X ar
            
            Assert.IsTrue(arx.Beta.Length = 3)

            let expBetas = [| 4.6050; 1.2619; -0.4813; 0.1124; -0.2430; -0.2590; -0.4834|];        
            let actualBetas = Array.concat [| [|arx.Const|]; arx.AR.Coefficients; arx.Beta |]
               
            Array.map2 (fun act exp -> Assert.IsTrue(areWithinPrc act exp 0.01)) actualBetas expBetas

        [<Test>]
        member this.ARMAXTest1_IndicatorVariables00() = 
            //PASSES JUST FINE...
            let mutable Y = [|36.8003658529801; 37.2481350437934; 37.0695811805175; 35.5552318063223; 34.5672979597624; 32.7190736181168; 33.2544445485166; 33.3006898824221; 35.4161460538419; 34.5263129034741; 37.0097088957308; 38.0973073482846; 39.6910982368470; 38.4441308258860; 37.9354376995755; 38.1737369156479; 38.7242081301591; 42.6255772754214; 46.0740938038241; 46.7120438637614; 44.6012741831342; 42.8762306160078; 40.9207184854941; 40.2060747442162; 37.5717074268833; 35.2730594252585; 30.5182818568633; 26.0436961918052; 25.1158130975261; 28.9914706235487; 38.3858899280429; 43.6309193976634; 49.4272563393286; 49.4815095387733; 49.2184670088856; 49.0073714000401; 48.6603051902827; 48.4650046682594; 48.5275763456753; 48.6274351317084; 49.3254266880093; 49.8737080433327; 50.0774032744136; 49.0748123615163; 48.0661985394098; 47.2192653941155; 44.6504075002871; 42.6808375949555; 38.8689871983970; 39.0546022793986; 38.0462621534021; 36.8963783477281; 36.9764278545489; 38.7112383906545; 40.1057491457291; 44.6121182914087; 47.3364793564179; 47.7633308358985; 47.3060353583085; 47.2682811969546; 47.1020282180649; 46.8486314846921; 46.5586911409099; 46.7154316197517; 47.0363111870351; 47.6566725604498; 47.7937418657536; 47.1592357687939; 46.5627010156993; 45.4619628243402; 44.8694624515406; 42.9554295482978; 38.7550582062158; 34.2143528896270; 25.6847959092813; 23.7273340576805; 22.9936458941935; 25.7407830751769; 36.1712232407465; 41.4028191141095; 46.6443840422138; 46.9109076924669; 46.6798924992818; 46.6385018746668; 46.4194496115039; 46.2519882646965; 46.1944730844541; 46.4718017217542; 47.0197939567263; 47.5486089530678; 47.8219938089229; 46.8488800719758; 46.2044472596812; 45.6770500437834; 44.1618581601538; 43.0233655294111; 39.3012776689631; 38.1964874011912; 37.0106561208632; 35.8043303028436; 35.9668725279019; 37.3792542848209; 41.0271328679819; 44.2660692214334; 47.7021481421194; 47.8646394712548; 47.0680917661265; 46.8143456180642; 46.6914291482561; 46.5791985196532; 46.6055485314925; 46.8373355096717; 47.0941230076948; 47.5035075081659; 47.4031420285321; 46.7809374755015; 45.9896215931985; 45.2879854063604; 44.1330822415494; 42.8864073024132; 37.8460405025795; 36.3885088158072; 34.4711791454353; 29.7177473344748; 28.6726096738324; 34.9641251686889; 38.6508584480973; 43.2087542305491; 46.1514532457689; 47.0297800093551; 46.6133237214884; 46.4581710644953; 46.0876415757684; 45.7709750494796; 45.6157667079629; 45.8363192395274; 46.4171148265846; 46.8404672952389; 46.8229965851329; 46.2530923575210; 45.1391493183694; 44.4646470736622; 43.1298623840177; 43.0263176429013; 40.5208683295932; 38.3587729952663; 36.3183503069935; 34.5064033325240; 33.8949926729602; 33.2843947390481; 34.4378886512024; 35.6738029991483; 39.0098340268039; 40.8481939505999; 42.5114609638341; 43.2927129485827; 43.5694081564326; 43.5361720430196; 43.6409101120714; 43.5172143889321; 44.1043402760397; 45.5391553262326; 46.0356090728973; 45.4500129000665; 44.7738316831634; 42.9448588690712; 42.4432854327882; 41.6438253808001; 38.7485857133966; 40.8912189736113; 38.6089105191843; 36.5781133377096; 35.8985823418124; 35.5356563626017; 36.8144990233544; 36.9129362639892; 38.4884567688026; 39.3614535768513; 40.9312809839884; 43.8273750544463; 44.8676227342729; 44.9858513152620; 42.6791089378054; 40.7716202162227; 41.1783188292920; 43.9234760331783; 46.1641856801184; 45.7897986383721; 45.2133840720723; 44.4874341861634; 42.6097130415762; 39.9327623667043; 35.3362106403106; 35.2421505496978; 29.9894096139644; 26.3148976298018; 26.2838489745345; 25.0644857288478; 37.6266183834467; 41.9733817752299; 46.9148364455695; 47.4471908720304; 46.8574643624941; 46.6696125463545; 46.4146845870213; 46.2710284192675; 46.2960916333963; 46.5562715026759; 47.2646864659490; 47.7643721607448; 48.1174490555435; 47.6266926438517; 46.6693362958682; 45.8534064705025; 45.3148227040049; 41.7007148726560; 38.5545103476917; 38.5686739101970; 37.4800182404826; 36.6547364363420; 36.5815527916386; 36.5695494463029; 39.2870042739121; 43.7075478071156; 46.1110913693146; 46.4289392880182; 45.9629608807610; 45.8281850331048; 45.7143017271326; 45.6013122711413; 45.6172730463808; 45.7799569945758; 45.9590747243787; 46.3611725042891; 46.2440588872270; 45.4776204498564; 44.6922699461597; 43.5535205537889; 43.1011142571630; 41.2268187024690; 36.6620027259962; 38.9135928857396; 36.9558313285978; 31.2664649012867; 30.8755572830020; 34.3641075447674; 39.5260426071730; 42.4343954608159; 46.2348610673179; 46.8846436299355; 46.4698656057732; 46.2377992419637; 45.9887256312211; 45.6145881735516; 45.6295034769612; 45.8306271614489; 46.1067639144036; 46.8900988639697; 46.8628451913342; 46.1159379475480; 45.4286203288837; 44.4455214622363; 43.4470230013346; 40.6409033991680; 37.5124838232083; 37.7904703590004; 35.5335602217569; 34.3753626747642; 34.1223133450401; 35.4404931346518; 38.2174228829556; 40.8842045487327; 44.5254398321673; 45.0775400339476; 44.3105220368331; 44.0370010810945; 43.8063650391326; 43.7657439034867; 43.9024386197029; 44.3221082400810; 44.9416309820315; 45.5904583404256; 45.6179439699105; 44.8265577459732; 43.7310625975028; 43.0552376006180; 41.6995682946653; 39.8419436675527; 36.5741631723132; 37.8280417154847; 35.8330859652844; 35.1989354682599; 35.1569952513931; 35.8265223988024; 39.3534466153553; 43.0741493033264; 46.1871375800669; 46.8787368511246; 46.4853336551812; 46.4022616791223; 46.1126786681173; 45.9447804451933; 45.7194750943263; 45.7528487939960; 46.1000898405448; 46.4017995497084; 46.5305350202027; 46.1933704965921; 45.2200735962604; 44.3591173045809; 42.3383282291599; 40.5938241473978; 39.3777643537260; 39.6675073335917; 38.0719246311566; 35.9690891704596; 35.0316270222956; 35.6657534995183; 37.3750645026806; 38.1731820870416; 39.2556044545409; 41.1594580335656; 44.0493610706582; 45.4180414415941; 45.6131675198931; 45.3024048620293; 44.2569885148506; 43.6010979050773; 44.6980916938785; 46.2311422906135; 46.8636825269801; 46.3924163416246; 45.6613914548560; 43.7389010809303; 43.1450474607294; 41.6634688657019; 39.6918642068735; 39.8580776553404; 39.1748892671406; 38.1970437648780; 37.4315731442878; 36.2647476276404; 36.8697321537948; 37.4566431892237; 38.5280331540441; 37.7616976204999; 38.4061524592947; 40.2725813794810; 43.0171684321001; 42.3416537831133; 40.8288654523796; 41.1610196618006; 42.3058249327434; 44.5661135774770; 46.8411982286476; 46.6581177431335; 45.6691941980040; 44.5072142114009; 44.2879889945831; 44.2095293664005; 40.9603714064316; 39.9569918300200; 39.9739838476250; 39.8341338776234; 39.8454459387669; 40.8232198305508; 43.0385921000588; 45.4474720113056; 50.5580868207531; 53.9358929981353; 50.6618530989446; 50.1542063434315; 49.0816284484609; 48.7135142101175; 48.8226336512721; 49.6775943618899; 60.4077312909598; 79.5239037982378; 61.3621221548753; 47.9815500869112; 45.6650906207230; 44.0129458532175; 43.5965227423479; 42.5357277186402; 40.7618146094456; 38.6996211095819; 38.3827987825505; 37.7857498337367; 37.2772646028097; 37.7425735136498; 40.1322899358696; 42.5455864749412; 45.9566510835041; 47.0699302972521; 46.1758644904013; 45.8065839213246; 45.1564159559435; 43.7568612498278; 43.3430563742292; 43.6145940597547; 44.8369305335667; 45.6363505102354; 45.6644806558024; 43.5933177269972; 42.1633745090888; 41.2470398530687; 40.9254340669971; 39.6531201959143; 37.7697022911950; 36.9495364650116; 35.9552333404049; 34.6616330032169; 33.8026964539731; 34.7017683042236; 37.7261072498258; 41.0405702058839; 42.5618934502257; 43.2522837802052; 42.7202428975924; 42.7276319834203; 42.6458206331017; 42.2791723486088; 42.4889635211579; 42.7444661114071; 43.6457835712600; 45.0550403355239; 45.0436629500673; 42.9533355863522; 41.9281098082376; 41.3513139857657; 40.8716047186743; 40.0641034849875; 37.1315040476258; 36.9327107923719; 35.5064606977454; 34.6051025500848; 34.5952552213855; 35.2567218782827; 37.4164925335229; 39.7219057362152; 41.6876814664410; 42.2940480420382; 41.7681508779511; 41.6439788640629; 41.5215377967646; 41.5978279035379; 41.5349636853022; 41.6896243280699; 41.6940493394551; 42.2990340898789; 42.0475111326253; 41.1887560075958; 40.7859715907647; 40.2020440609445; 39.6171062291962; 38.7949432247241; 37.0104627272987; 35.9136346815410; 34.4304156503568; 33.1283800486308; 32.1133746621390; 32.9867501841582; 37.1186833265591; 38.8746623456191; 40.3189663142722; 41.0323346732774; 40.7892080342829; 40.7859803154328; 40.5462574209781; 39.9948340789167; 39.5797036931938; 39.5549744413471; 40.2299752109129; 40.5697065928314; 40.5988331233555; 40.1545492705618; 39.1849336127831; 38.5451372026596; 38.1810924577364; 37.4486055379096; 34.6001473272892; 34.6223914777551; 33.6209287002164; 32.5471137913817; 32.6138558137302; 32.9176232160017; 33.8290879158206; 32.7680893955443; 34.2065885064039; 37.0824308304966; 37.9950838744523; 38.9830858910820; 39.0699548115402; 39.0473281897001; 38.4342321394921; 38.0966105058089; 39.2123898144414; 40.9813986272728; 41.4038370769361; 40.7362154906059; 39.6844917673063; 38.2349031626708; 37.0832172750551; 36.6782245448082; 33.6205205702198; 37.9480289346790; 35.9368898850170; 34.8434096394292; 34.8707097668380; 35.1155387640000; 35.3087503861256; 33.7174869439710; 35.9732498073394; 36.9649769812824; 38.2481643011528; 40.5569910308357; 40.9896539212127; 40.8053100600983; 40.5944412885775; 39.4710941031715; 39.8228876835448; 41.7851431701675; 42.3783287651239; 41.4947096982941; 40.7817914002225; 40.1780596143896; 40.6177606417505; 40.9032082007043; 39.3720666011504; 38.0909476442280; 37.2730399332590; 35.9757509238997; 35.2505266197170; 36.1526448848794; 36.8943703266388; 36.4928685989680; 36.8661818387903; 37.9923990779675; 39.0324406204395; 40.8150815971227; 41.7431627899283; 41.2581800103932; 39.7754124337692; 39.3883062023950; 40.0212781320952; 41.8650028069923; 42.9297177262653; 43.4252117882903; 42.9865976131274; 42.4160908906104; 42.2181879576996; 42.4858392276554; 40.8382852943769; 38.7328327857301; 38.6687756541796; 36.9021080510026; 36.3545010818917; 36.3281169492914; 37.6424890841783; 39.4202214218544; 40.1764749931547; 41.0983729864841; 41.3558409837273; 42.5151533084041; 42.5631307207921; 42.3635755618624; 41.2800759465034; 41.0596212953716; 42.4279875359379; 43.3615443163095; 44.3985334380776; 44.1681379653523; 43.7533345313970; 42.5266447247063; 42.5098290210233; 42.4436602146800; 41.0386495174445; 41.4573126637145; 40.6483840448626; 39.0540136370099; 37.7303629547774; 37.5206743430834; 40.3190584608599; 41.4011341536303; 43.6881445291202; 44.7089982433741; 45.1621703930939; 45.0758634279097; 44.9999201561104; 44.9932906829693; 44.9564548842549; 45.2148924453323; 45.6557641979858; 45.8625097676351; 45.8286549965168; 45.5578012883983; 44.9748792621056; 44.1536569328551; 43.3440881519039; 42.2309257988137; 41.1045636414965; 40.0148041318900; 38.8332077026530; 37.6598958192899; 37.2829405535475; 37.8086367264947; 39.7453681550166; 41.3084426254235; 42.8281435869260; 43.7532019909107; 44.8902264794508; 45.2509515876454; 45.1917386625923; 45.0242472885719; 44.8683080613578; 45.0192578593665; 45.3641038057396; 45.7225878719756; 45.7299657254158; 45.4013663281930; 44.7419292991141; 44.1211667544477; 43.2529627857811; 42.4071123611732; 40.4113057781711; 39.9525058740352; 38.7423136587738; 37.7477095135920; 37.7241316317570; 38.5782916809091; 40.4741355200880; 40.7064937341796; 42.0187265377244; 43.7836607067582; 44.0932215232923; 44.3186696821936; 44.3331907543089; 43.7755196007351; 42.9301430985730; 42.6387418770400; 43.0506285977932; 43.6429535879868; 43.9204179728979; 43.2967199308868; 41.8839899263653; 40.8073378356991; 40.2293402354404; 39.7092172189017; 37.2565574270834; 38.4463400846565; 36.9395379815607; 36.1159942156207; 35.6011962693909; 35.6565352991774; 35.6135031820392; 36.5274471211849; 37.3989881474604; 38.8589517347944; 39.5290220774066; 40.3960488076242; 40.6098142251900; 40.4755903191452; 40.0971196441787; 39.7047123360237; 40.2934891602754; 41.3856237226253; 43.2786436078163; 42.6211710630606; 40.7025535617522; 39.9158408799130; 39.5449047591079; 38.4410551972777|]
            Y <- Y.[0..503]

            let lmat = LaggedMatrix Y [|1; 2; 24|]

            let X = Array2D.zeroCreate Y.Length 3
            let ones = (Array.zeroCreate 24) .+. 1.0 
            let N = Y.Length / 168
            for j in 0..N-1 do
                X.[j*168 + 0*24 .. j*168 + 0*24 + 23, 0] <- ones;
                X.[j*168 + 5*24 .. j*168 + 5*24 + 23, 1] <- ones;
                X.[j*168 + 6*24 .. j*168 + 6*24 + 23, 2] <- ones;
            
                       
            let ar = {
                Coefficients = [|0.0; 0.0; 0.0|];
                Lags = [|1; 2; 24|]
            }
            
            let ma = {
                Coefficients = [|0.0|];
                Lags = [|24|]
            }

            let arxma = ARXMA Y X ar ma
            
            //the ARX part should be constant, just like in the previous test, no need to re test

            //the ma part
            let expMAs = [| 0.1294 |];        
            let actualMAs = arxma.MA.Coefficients
               
            Array.iter2 (fun act exp -> Assert.IsTrue(areWithinPrc act exp 0.05)) expMAs actualMAs

        [<Test>]
        member this.ARMAXTest1_IndicatorVariables() = 
            //PASSES INDEED JUST FINE...
            let mutable Y = [|36.8003658529801; 37.2481350437934; 37.0695811805175; 35.5552318063223; 34.5672979597624; 32.7190736181168; 33.2544445485166; 33.3006898824221; 35.4161460538419; 34.5263129034741; 37.0097088957308; 38.0973073482846; 39.6910982368470; 38.4441308258860; 37.9354376995755; 38.1737369156479; 38.7242081301591; 42.6255772754214; 46.0740938038241; 46.7120438637614; 44.6012741831342; 42.8762306160078; 40.9207184854941; 40.2060747442162; 37.5717074268833; 35.2730594252585; 30.5182818568633; 26.0436961918052; 25.1158130975261; 28.9914706235487; 38.3858899280429; 43.6309193976634; 49.4272563393286; 49.4815095387733; 49.2184670088856; 49.0073714000401; 48.6603051902827; 48.4650046682594; 48.5275763456753; 48.6274351317084; 49.3254266880093; 49.8737080433327; 50.0774032744136; 49.0748123615163; 48.0661985394098; 47.2192653941155; 44.6504075002871; 42.6808375949555; 38.8689871983970; 39.0546022793986; 38.0462621534021; 36.8963783477281; 36.9764278545489; 38.7112383906545; 40.1057491457291; 44.6121182914087; 47.3364793564179; 47.7633308358985; 47.3060353583085; 47.2682811969546; 47.1020282180649; 46.8486314846921; 46.5586911409099; 46.7154316197517; 47.0363111870351; 47.6566725604498; 47.7937418657536; 47.1592357687939; 46.5627010156993; 45.4619628243402; 44.8694624515406; 42.9554295482978; 38.7550582062158; 34.2143528896270; 25.6847959092813; 23.7273340576805; 22.9936458941935; 25.7407830751769; 36.1712232407465; 41.4028191141095; 46.6443840422138; 46.9109076924669; 46.6798924992818; 46.6385018746668; 46.4194496115039; 46.2519882646965; 46.1944730844541; 46.4718017217542; 47.0197939567263; 47.5486089530678; 47.8219938089229; 46.8488800719758; 46.2044472596812; 45.6770500437834; 44.1618581601538; 43.0233655294111; 39.3012776689631; 38.1964874011912; 37.0106561208632; 35.8043303028436; 35.9668725279019; 37.3792542848209; 41.0271328679819; 44.2660692214334; 47.7021481421194; 47.8646394712548; 47.0680917661265; 46.8143456180642; 46.6914291482561; 46.5791985196532; 46.6055485314925; 46.8373355096717; 47.0941230076948; 47.5035075081659; 47.4031420285321; 46.7809374755015; 45.9896215931985; 45.2879854063604; 44.1330822415494; 42.8864073024132; 37.8460405025795; 36.3885088158072; 34.4711791454353; 29.7177473344748; 28.6726096738324; 34.9641251686889; 38.6508584480973; 43.2087542305491; 46.1514532457689; 47.0297800093551; 46.6133237214884; 46.4581710644953; 46.0876415757684; 45.7709750494796; 45.6157667079629; 45.8363192395274; 46.4171148265846; 46.8404672952389; 46.8229965851329; 46.2530923575210; 45.1391493183694; 44.4646470736622; 43.1298623840177; 43.0263176429013; 40.5208683295932; 38.3587729952663; 36.3183503069935; 34.5064033325240; 33.8949926729602; 33.2843947390481; 34.4378886512024; 35.6738029991483; 39.0098340268039; 40.8481939505999; 42.5114609638341; 43.2927129485827; 43.5694081564326; 43.5361720430196; 43.6409101120714; 43.5172143889321; 44.1043402760397; 45.5391553262326; 46.0356090728973; 45.4500129000665; 44.7738316831634; 42.9448588690712; 42.4432854327882; 41.6438253808001; 38.7485857133966; 40.8912189736113; 38.6089105191843; 36.5781133377096; 35.8985823418124; 35.5356563626017; 36.8144990233544; 36.9129362639892; 38.4884567688026; 39.3614535768513; 40.9312809839884; 43.8273750544463; 44.8676227342729; 44.9858513152620; 42.6791089378054; 40.7716202162227; 41.1783188292920; 43.9234760331783; 46.1641856801184; 45.7897986383721; 45.2133840720723; 44.4874341861634; 42.6097130415762; 39.9327623667043; 35.3362106403106; 35.2421505496978; 29.9894096139644; 26.3148976298018; 26.2838489745345; 25.0644857288478; 37.6266183834467; 41.9733817752299; 46.9148364455695; 47.4471908720304; 46.8574643624941; 46.6696125463545; 46.4146845870213; 46.2710284192675; 46.2960916333963; 46.5562715026759; 47.2646864659490; 47.7643721607448; 48.1174490555435; 47.6266926438517; 46.6693362958682; 45.8534064705025; 45.3148227040049; 41.7007148726560; 38.5545103476917; 38.5686739101970; 37.4800182404826; 36.6547364363420; 36.5815527916386; 36.5695494463029; 39.2870042739121; 43.7075478071156; 46.1110913693146; 46.4289392880182; 45.9629608807610; 45.8281850331048; 45.7143017271326; 45.6013122711413; 45.6172730463808; 45.7799569945758; 45.9590747243787; 46.3611725042891; 46.2440588872270; 45.4776204498564; 44.6922699461597; 43.5535205537889; 43.1011142571630; 41.2268187024690; 36.6620027259962; 38.9135928857396; 36.9558313285978; 31.2664649012867; 30.8755572830020; 34.3641075447674; 39.5260426071730; 42.4343954608159; 46.2348610673179; 46.8846436299355; 46.4698656057732; 46.2377992419637; 45.9887256312211; 45.6145881735516; 45.6295034769612; 45.8306271614489; 46.1067639144036; 46.8900988639697; 46.8628451913342; 46.1159379475480; 45.4286203288837; 44.4455214622363; 43.4470230013346; 40.6409033991680; 37.5124838232083; 37.7904703590004; 35.5335602217569; 34.3753626747642; 34.1223133450401; 35.4404931346518; 38.2174228829556; 40.8842045487327; 44.5254398321673; 45.0775400339476; 44.3105220368331; 44.0370010810945; 43.8063650391326; 43.7657439034867; 43.9024386197029; 44.3221082400810; 44.9416309820315; 45.5904583404256; 45.6179439699105; 44.8265577459732; 43.7310625975028; 43.0552376006180; 41.6995682946653; 39.8419436675527; 36.5741631723132; 37.8280417154847; 35.8330859652844; 35.1989354682599; 35.1569952513931; 35.8265223988024; 39.3534466153553; 43.0741493033264; 46.1871375800669; 46.8787368511246; 46.4853336551812; 46.4022616791223; 46.1126786681173; 45.9447804451933; 45.7194750943263; 45.7528487939960; 46.1000898405448; 46.4017995497084; 46.5305350202027; 46.1933704965921; 45.2200735962604; 44.3591173045809; 42.3383282291599; 40.5938241473978; 39.3777643537260; 39.6675073335917; 38.0719246311566; 35.9690891704596; 35.0316270222956; 35.6657534995183; 37.3750645026806; 38.1731820870416; 39.2556044545409; 41.1594580335656; 44.0493610706582; 45.4180414415941; 45.6131675198931; 45.3024048620293; 44.2569885148506; 43.6010979050773; 44.6980916938785; 46.2311422906135; 46.8636825269801; 46.3924163416246; 45.6613914548560; 43.7389010809303; 43.1450474607294; 41.6634688657019; 39.6918642068735; 39.8580776553404; 39.1748892671406; 38.1970437648780; 37.4315731442878; 36.2647476276404; 36.8697321537948; 37.4566431892237; 38.5280331540441; 37.7616976204999; 38.4061524592947; 40.2725813794810; 43.0171684321001; 42.3416537831133; 40.8288654523796; 41.1610196618006; 42.3058249327434; 44.5661135774770; 46.8411982286476; 46.6581177431335; 45.6691941980040; 44.5072142114009; 44.2879889945831; 44.2095293664005; 40.9603714064316; 39.9569918300200; 39.9739838476250; 39.8341338776234; 39.8454459387669; 40.8232198305508; 43.0385921000588; 45.4474720113056; 50.5580868207531; 53.9358929981353; 50.6618530989446; 50.1542063434315; 49.0816284484609; 48.7135142101175; 48.8226336512721; 49.6775943618899; 60.4077312909598; 79.5239037982378; 61.3621221548753; 47.9815500869112; 45.6650906207230; 44.0129458532175; 43.5965227423479; 42.5357277186402; 40.7618146094456; 38.6996211095819; 38.3827987825505; 37.7857498337367; 37.2772646028097; 37.7425735136498; 40.1322899358696; 42.5455864749412; 45.9566510835041; 47.0699302972521; 46.1758644904013; 45.8065839213246; 45.1564159559435; 43.7568612498278; 43.3430563742292; 43.6145940597547; 44.8369305335667; 45.6363505102354; 45.6644806558024; 43.5933177269972; 42.1633745090888; 41.2470398530687; 40.9254340669971; 39.6531201959143; 37.7697022911950; 36.9495364650116; 35.9552333404049; 34.6616330032169; 33.8026964539731; 34.7017683042236; 37.7261072498258; 41.0405702058839; 42.5618934502257; 43.2522837802052; 42.7202428975924; 42.7276319834203; 42.6458206331017; 42.2791723486088; 42.4889635211579; 42.7444661114071; 43.6457835712600; 45.0550403355239; 45.0436629500673; 42.9533355863522; 41.9281098082376; 41.3513139857657; 40.8716047186743; 40.0641034849875; 37.1315040476258; 36.9327107923719; 35.5064606977454; 34.6051025500848; 34.5952552213855; 35.2567218782827; 37.4164925335229; 39.7219057362152; 41.6876814664410; 42.2940480420382; 41.7681508779511; 41.6439788640629; 41.5215377967646; 41.5978279035379; 41.5349636853022; 41.6896243280699; 41.6940493394551; 42.2990340898789; 42.0475111326253; 41.1887560075958; 40.7859715907647; 40.2020440609445; 39.6171062291962; 38.7949432247241; 37.0104627272987; 35.9136346815410; 34.4304156503568; 33.1283800486308; 32.1133746621390; 32.9867501841582; 37.1186833265591; 38.8746623456191; 40.3189663142722; 41.0323346732774; 40.7892080342829; 40.7859803154328; 40.5462574209781; 39.9948340789167; 39.5797036931938; 39.5549744413471; 40.2299752109129; 40.5697065928314; 40.5988331233555; 40.1545492705618; 39.1849336127831; 38.5451372026596; 38.1810924577364; 37.4486055379096; 34.6001473272892; 34.6223914777551; 33.6209287002164; 32.5471137913817; 32.6138558137302; 32.9176232160017; 33.8290879158206; 32.7680893955443; 34.2065885064039; 37.0824308304966; 37.9950838744523; 38.9830858910820; 39.0699548115402; 39.0473281897001; 38.4342321394921; 38.0966105058089; 39.2123898144414; 40.9813986272728; 41.4038370769361; 40.7362154906059; 39.6844917673063; 38.2349031626708; 37.0832172750551; 36.6782245448082; 33.6205205702198; 37.9480289346790; 35.9368898850170; 34.8434096394292; 34.8707097668380; 35.1155387640000; 35.3087503861256; 33.7174869439710; 35.9732498073394; 36.9649769812824; 38.2481643011528; 40.5569910308357; 40.9896539212127; 40.8053100600983; 40.5944412885775; 39.4710941031715; 39.8228876835448; 41.7851431701675; 42.3783287651239; 41.4947096982941; 40.7817914002225; 40.1780596143896; 40.6177606417505; 40.9032082007043; 39.3720666011504; 38.0909476442280; 37.2730399332590; 35.9757509238997; 35.2505266197170; 36.1526448848794; 36.8943703266388; 36.4928685989680; 36.8661818387903; 37.9923990779675; 39.0324406204395; 40.8150815971227; 41.7431627899283; 41.2581800103932; 39.7754124337692; 39.3883062023950; 40.0212781320952; 41.8650028069923; 42.9297177262653; 43.4252117882903; 42.9865976131274; 42.4160908906104; 42.2181879576996; 42.4858392276554; 40.8382852943769; 38.7328327857301; 38.6687756541796; 36.9021080510026; 36.3545010818917; 36.3281169492914; 37.6424890841783; 39.4202214218544; 40.1764749931547; 41.0983729864841; 41.3558409837273; 42.5151533084041; 42.5631307207921; 42.3635755618624; 41.2800759465034; 41.0596212953716; 42.4279875359379; 43.3615443163095; 44.3985334380776; 44.1681379653523; 43.7533345313970; 42.5266447247063; 42.5098290210233; 42.4436602146800; 41.0386495174445; 41.4573126637145; 40.6483840448626; 39.0540136370099; 37.7303629547774; 37.5206743430834; 40.3190584608599; 41.4011341536303; 43.6881445291202; 44.7089982433741; 45.1621703930939; 45.0758634279097; 44.9999201561104; 44.9932906829693; 44.9564548842549; 45.2148924453323; 45.6557641979858; 45.8625097676351; 45.8286549965168; 45.5578012883983; 44.9748792621056; 44.1536569328551; 43.3440881519039; 42.2309257988137; 41.1045636414965; 40.0148041318900; 38.8332077026530; 37.6598958192899; 37.2829405535475; 37.8086367264947; 39.7453681550166; 41.3084426254235; 42.8281435869260; 43.7532019909107; 44.8902264794508; 45.2509515876454; 45.1917386625923; 45.0242472885719; 44.8683080613578; 45.0192578593665; 45.3641038057396; 45.7225878719756; 45.7299657254158; 45.4013663281930; 44.7419292991141; 44.1211667544477; 43.2529627857811; 42.4071123611732; 40.4113057781711; 39.9525058740352; 38.7423136587738; 37.7477095135920; 37.7241316317570; 38.5782916809091; 40.4741355200880; 40.7064937341796; 42.0187265377244; 43.7836607067582; 44.0932215232923; 44.3186696821936; 44.3331907543089; 43.7755196007351; 42.9301430985730; 42.6387418770400; 43.0506285977932; 43.6429535879868; 43.9204179728979; 43.2967199308868; 41.8839899263653; 40.8073378356991; 40.2293402354404; 39.7092172189017; 37.2565574270834; 38.4463400846565; 36.9395379815607; 36.1159942156207; 35.6011962693909; 35.6565352991774; 35.6135031820392; 36.5274471211849; 37.3989881474604; 38.8589517347944; 39.5290220774066; 40.3960488076242; 40.6098142251900; 40.4755903191452; 40.0971196441787; 39.7047123360237; 40.2934891602754; 41.3856237226253; 43.2786436078163; 42.6211710630606; 40.7025535617522; 39.9158408799130; 39.5449047591079; 38.4410551972777|]
            Y <- Y.[0..503]

            let lmat = LaggedMatrix Y [|1; 2; 24|]

            let X = Array2D.zeroCreate Y.Length 3
            let ones = (Array.zeroCreate 24) .+. 1.0 
            let N = Y.Length / 168
            for j in 0..N-1 do
                X.[j*168 + 0*24 .. j*168 + 0*24 + 23, 0] <- ones;
                X.[j*168 + 5*24 .. j*168 + 5*24 + 23, 1] <- ones;
                X.[j*168 + 6*24 .. j*168 + 6*24 + 23, 2] <- ones;
            
                       
            let ar = {
                Coefficients = [|0.0; 0.0; 0.0|];
                Lags = [|1; 2; 24|]
            }
            
            let ma = {
                Coefficients = [|0.0; 0.0|];
                Lags = [|24; 168|]
            }

            let arxma = ARXMA Y X ar ma
            
            //the ARX part should be constant, just like in the previous test, no need to re test

            //the ma part
            let expMAs = [| 0.1349; 0.2032 |];        
            let actualMAs = arxma.MA.Coefficients
               
            Array.iter2 (fun act exp -> Assert.IsTrue(areWithinPrc act exp 0.05)) expMAs actualMAs
