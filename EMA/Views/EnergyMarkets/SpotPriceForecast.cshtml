@using EMA.Helpers
@using MarketModels;
@{
    ViewBag.Title = "Spot Price Forecast";
}

<style>
    #model-details table {
        width: 100%;
    }
</style>

<script>
    SERVER_CONSTANTS = {
        TimeHorizons: @(Html.EnumTypeToJavascript<Types.TimeHorizon>()),
        ForecastMethods: @(Html.EnumTypeToJavascript<Types.ForecastMethod>()),
        SpikesPreprocessMethods: @(Html.EnumTypeToJavascript<Forecast.SpikePreprocess>()),
        ExogenousVariables: @(Html.Raw(ViewBag.ExogenousVariables)),
    };
</script>

<script src="~/Scripts/App/forecast.js"></script>

<div ng-controller="ForecastController">
    <div class="row">
        <div class="col-md-4">
            <div class="panel-header">
                <h2><a data-toggle="modal" data-target="#demoDescription">Price Forecast</a></h2>
            </div>
            <div class="panel">
                <h3 data-toggle="tooltip" data-placement="right" title="Demo parameters">Parameters</h3>
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="date-time-picker" class="control-label col-xs-6">Date</label>
                        <div class="col-xs-6">
                            @{Html.RenderPartial("~/Views/Components/DateTimePicker.cshtml", null, new ViewDataDictionary(){
                                            { "Id", "date-picker" }, { "ModelName", "date" },
                                            { "MinDate", new DateTime(2012,1,1) } });}
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="menu-fm" class="control-label col-xs-6">Forecast Method</label>
                        <div class="col-xs-6">
                            @{Html.RenderPartial("~/Views/Components/DropDownList.cshtml", null, new ViewDataDictionary(){
                                  { "Id", "menu-fm" } , { "ModelName", "ForecastMethods" }, { "SelectedValue", "forecastMethod" },
                                  { "Tooltip", "One of the 3 methods used to forecast, arranged in order of accuracy."} });}
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="menu-sp" class="control-label col-xs-6">Spikes Preprocess</label>
                        <div class="col-xs-6">
                            @{Html.RenderPartial("~/Views/Components/DropDownList.cshtml", null, new ViewDataDictionary(){
                                  { "Id", "menu-sp" } , { "ModelName", "SpikesPreprocessMethods" }, { "SelectedValue", "spikesPreprocessMethod" },
                                  { "Tooltip", "All spikes will be replaced by an interpolation method, shown on the chart, and will not affect the forecasted values."} });}
                        </div>
                    </div>
                    <div ng-show="spikesPreprocessMethod != 'None'">
                        @{Html.RenderPartial("~/Views/Components/InputText.cshtml", null, new ViewDataDictionary(){
                                            { "Id", "spikesThreshold" }, { "Label", "Spikes Threshold" } });}
                    </div>
                    <div class="form-group" ng-show="forecastMethod == 'ARMA'">
                        <label for="menu-ev" class="control-label col-xs-6">Exogenous Variables</label>
                        <div class="col-xs-6">
                            @{Html.RenderPartial("~/Views/Components/SelectionList.cshtml", null, new ViewDataDictionary(){
                                  { "Id", "menu-ev" } , { "ModelName", "ExogenousVariables" }, { "SelectedValues", "exogenousVariables" } });}
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="menu-th" class="control-label col-xs-6">Time Horizon</label>
                        <div class="col-xs-6">
                            @{Html.RenderPartial("~/Views/Components/DropDownList.cshtml", null, new ViewDataDictionary(){
                                  { "Id", "menu-th" } , { "ModelName", "TimeHorizons" }, { "SelectedValue", "timeHorizon" } });}
                        </div>
                    </div>
                    @{Html.RenderPartial("~/Views/Components/InputText.cshtml", null, new ViewDataDictionary(){
                                            { "Id", "confidence" }, { "Label", "Confidence (%)" } });}
                </form>
                <h3 data-toggle="tooltip" data-placement="right" title="Editable values of the estimated forecasting model paramters">
                    Model Parameters
                </h3>
                <form class="form-horizontal" ng-show="MathModel != null && Object.keys(MathModel).length != 0">
                    <div ng-repeat="(key, value) in MathModel" class="form-group">
                        <label for="input-{{key}}" class="control-label col-xs-6">{{key}}</label>
                        <div class="col-xs-6">
                            <input id="input-{{key}}" type="text" class="form-control"
                                   ng-model="MathModel[key]" value="{{value}}"
                                   ng-model-options="{ updateOn: 'blur'}"
                                   placeholder="1" style="width: 100px;">
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-8">
            <div class="panel-header">
                <h2>Result</h2>
            </div>
            <div class="panel">
                <div id="container" style="height: 400px; min-width: 310px"></div>
                <div id="model-details" class="row">
                    <div class="col-md-6">
                        @{Html.RenderPartial("~/Views/Components/ForecastFit.cshtml", null, new ViewDataDictionary(){
                                            {"Title", "Estimation Summary" }, { "ModelName", "EstimationFit" } });}
                    </div>
                    <div class="col-md-6">
                        @{Html.RenderPartial("~/Views/Components/ForecastFit.cshtml", null, new ViewDataDictionary(){
                                            {"Title", "Forecast Summary" }, { "ModelName", "Fit" }});}
                        @*<iframe id="MarketCurvesFrame" src="{{ForecastSurfaceIframeUrl}}"
                                style="width: 100%; height: 480px; border: 0;" frameBorder="0"></iframe>*@
                    </div>
                </div>
                <div id="xxxmodel-details" class="row">
                    @*Model Diagnostic...
                    significance... etc...*@
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="demoDescription" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h2 class="modal-title" id="myModalLabel">Price Forecasting Demo Description</h2>
            </div>
            <div class="modal-body">
                <p>
                    A simple forecasting demonstration of various common models for houly price. It provides the
                    ability to forecast in the historical period, thereby allowing for an easy evaluation of a model, also shows the backcasting data.
                    As well as point forecast, interval forecasts are calculated and other relevant statistics are shown (P Values, etc...).
                    Very important to observe are the characterstics of electricity price, which are enumerated in the following image.
                </p>
                <img src="~/Content/Images/stylizedFactsAboutSystemPrice.png" style="width: 740px;" />
                <h2>Forecast Methods</h2>
                <p>Choice of methods is based on simplicity and conceptual accessibility. Those methods are adapted 
                   from research literature and presented for comparison purposes. Besides the naive method, all other support
                   inclusion of exogenous varaibles. Also, the user is presented with model parameter estimates that can be changed.
                </p>
                <h3>1. Naive</h3>
                <p>
                    As a benchmarking method the naive approach has fundamental importance. It takes previous season's prices
                    and averages them to compute the forecast. Previous day, previous week's today, previous month's today,
                    previous year's today are included, the variation constitutes the basis for the construction of normally distributed
                    prediction intervals.
                    <div class="tex2jax_process" style="">
                        $$ Y_{t+h} = Average(\{Y_{t-i}|i = 0, 24, 168, 672, 8760\}) $$
                        $$ \text{h}\text{ is the forecast horizon. } $$
                    </div>
                </p>
                <h3>2. Holt Winters</h3>
                <p>
                    Although more commonly used for demand variables, it's simple enough to be used here... it shows...
                    <div class="tex2jax_process" style="">
                    </div>
                    Estimation is done using a bounded linear function optimizer that minimizes the associated
                    RMSE within reasonable bounds.
                </p>
                <h3>3. Autoregressive Moving Average</h3>
                <p>
                    Full specification of a model looks like...
                    The full version is...
                    <div class="tex2jax_process" style="">
                        $$ \phi(B)Y_t = \theta(B)ε_t+\sum_{i=1}^{N_{ex}}\beta_i(B)X_t^i $$
                        $$ \text{Y}\text{ is the predicted variable. } $$
                        $$ \text{X}\text{ is the exogenous predictor variables } $$
                        $$ \text{N}_ex\text{ is the number of exogenous predictor variables } $$
                        $$ \phi(B) = 1 - \sum_{i=1}^{p}\phi_iB^i \text{ is the backward lag operator. } $$
                        $$ \theta(B) = 1 + \sum_{i=1}^{q}\theta_iB^i \text{ is the forward lag operator: } $$
                    </div>
                    The compact version is
                    Esimation is done via OLS fitting
                </p>
                <h2>Multivariate regression</h2>
                <p>Exogenous variables are included via linear regression</p>
                <div class="row">
                    <div class="col-md-4">
                        <p>
                            
                        </p>
                    </div>
                    <div class="col-md-8">
                        <img src="~/Content/Images/curvesIntersection.png" style="width: 480px;" />
                    </div>
                </div>
               
                <hr />

                <h3>Limitations</h3>
                1. Multiple regimes or heteroskedasticity concerns are ignored.<br />
                2. Outages and other short term constraints are not included. <br />
                3. Area prices and other relevant variables (such as flow constraints or exchange rates) are ignored. <br />
                <hr />

                <h3>References</h3>
                [1] - Weron, R., Misiorek, A. Forecasting spot electricity prices: A comparison of
                parametric and semiparametric time series models. International Journal of Forecasting. October
                2008, Vol. 24.
                <br />
                [2] - Taylor, J.W. (2003) Short-term electricity demand forecasting using double seasonal exponential
                smoothing, Journal of Operational Research Society 54, 799–805.
                <br />
                [3] - Winters, P. R. (April 1960) Forecasting Sales by Exponentially Weighted Moving Averages", 
                Management Science 
                <br />
                [4] - Box, G. E. P., G. M. Jenkins, and G. C. Reinsel. Time Series
                Analysis: Forecasting and Control. 3rd edition. Upper Saddle River,
                NJ: Prentice-Hall, 1994.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
